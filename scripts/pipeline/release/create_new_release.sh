#!/usr/bin/env bash
# Script to create a new release by aggregating release notes and generating a Git tag.
# Usage: ./create_new_release.sh

set -euo pipefail

# Ensure the script runs from the top-level repository directory
REPO_ROOT="$(git rev-parse --show-toplevel)"
cd "$REPO_ROOT"

# Automatically determine the version and starting commit
# Handle case where no tags exist
# Adjust versioning to follow semantic versioning with build number
if ! git describe --tags --abbrev=0 >/dev/null 2>&1; then
  echo "No existing Git tags found. Using initial version 1.0.0.0."
  VERSION="1.0.0.0"
  SINCE_COMMIT=$(git rev-list --max-parents=0 HEAD)
else
  VERSION=$(git describe --tags --abbrev=0 | awk -F. '{print $1"."$2"."$3"."$4+1}')
  SINCE_COMMIT=$(git describe --tags --abbrev=0)
fi

OUT_DIR="docs/releases"

# Ensure output directory exists
mkdir -p "$OUT_DIR"

# Generate release notes from Git history
RELEASE_NOTES_FILE="$OUT_DIR/Release-${VERSION}.md"
{
  echo "# Release ${VERSION}"
  echo
  echo "_Generated from Git history since commit: ${SINCE_COMMIT}_"
  echo
  git log --pretty=format:"- %h %ad %s" --date=short "${SINCE_COMMIT}..HEAD"
  echo
  echo "---"
  echo "Generated by create_new_release.sh"
} > "$RELEASE_NOTES_FILE"

echo "Generated release notes: $RELEASE_NOTES_FILE"

# Create a Git tag for the new release
git tag -a "v${VERSION}" -F "$RELEASE_NOTES_FILE"
echo "Created Git tag: v${VERSION}"

echo "Release process complete."